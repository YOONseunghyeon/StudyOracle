---문자열 함수

-- 소문자 ->대문자
SELECT* FROM emp
WHERE job = UPPER('analyst');

SELECT UPPER('analyst') FROM dual;

- 대문자 ->소문자
SELECT LOWER( ename), LOWER(job) FROM emp
WHERE comm IS NOT NULL;       --컬럼명이 LOWER(ENAME)이라서 별명 변경

SELECT LOWER( ename) ename,
INITCAP(job) job
FROM emp
WHERE comm IS NOT NULL;
d

--LENGTH 길이
SELECT ename , LENGTH(ename) 글자수, LENGTHB(ename) 바이트수
FROM emp;

--SUBSTRING 글자를 어디서부터어디까지 자를건지 (글자 잘라서 리턴)
SELECT SUBSTR( '안녕하세요, 한갈람IT전문학원 빅데이터반입니다'  ,18,4) phase FROM dual;
--REPLACE 글자 대체
SELECT REPLACE( '안녕하세요, 한갈람IT전문학원 빅데이터반입니다', '안녕하세요' , '저리가세요') FROM dual;


--글자 합치기 ( || ) , CONCAT
SELECT 'A'|| 'B' FROM dual;
SELECT concat('A','B') FROM dual;

--TRIM  공백지우기
SELECT '     안녕하세요     ' FROM dual;
SELECT LTRIM('     안녕하세요     ') FROM dual;
SELECT RTRIM('     안녕하세요     ') FROM dual;
SELECT TRIM('     안녕하세요     ') FROM dual;
SELECT '     안녕하세요     ' FROM dual;

SELECT ROUND(15.193, 1) FROM dual;         --round 반올림

--SYSDATE
SELECT SYSDATE FROM dual;

--TO_CHAR
SELECT ename, hiredate, TO_CHAR(hiredate, 'yyyy-mm-dd') , TO_CHAR(sal) || '$'
FROM emp;
 
--TO_NUMBER
SELECT TO_NUMBER('2400') + 100 FROM dual;
--TO_NUMBER, REPLACE 같이 쓰기
SELECT TO_NUMBER(REPLACE('2400$', '$' , ' ')) + 100 FROM dual;

--TO_DATE
SELECT TO_DATE('2022-01-12') FROM dual;
SELECT TO_DATE('01/12/22')FROM dual;
SELECT TO_DATE('01/12/22' , 'mm/dd/yy')FROM dual;

--NVL NULL값을 변경
SELECT ename, job, sal ,  NVL(comm, 0) comm,
(sal*12)+ NVL(comm, 0)  AS annsal
 FROM emp
ORDER BY sal DESC;

--집계함수 SUM, COUNT , MAX, MIN, AVG
--급여합계 이름은 tatalsalary
SELECT SUM(sal) tatalsalary FROM emp;
--수수료 합계 이름은tatalcommision
SELECT SUM (comm) tatalcommision FROM emp;
--급여 최댓값
SELECT MAX(sal) FROM emp;
--급여 최솟값
SELECT Min(sal) FROM emp;
--급여 평균 소숫점자리0 이름은 sal_avg
SELECT ROUND(AVG(sal),0)  sal_avg FROM emp;

SELECT MAX(sal) 월급최대 ,SUM(sal) 직업군당급여합계 ,  job, deptno 
FROM emp
GROUP BY job, deptno


--HAVING;
SELECT MAX(sal) 월급최대 ,SUM(sal) 직업군당급여합계 ,  job
FROM emp
GROUP BY job
HAVING MAX(sal) > 4000;

SELECT deptno, job, AVG(sal) , MAX(sal), MIN(sal), COUNT(*)
FROM emp
GROUP BY deptno, job
HAVING AVG(sal) >= 1000
ORDER BY deptno, job ;

--
SELECT deptno, NVL(job, '합계') JOB,
ROUND(AVG(sal),2) 급여평균 , MAX(sal) 급여최대, SUM(sal) 급여합계, COUNT(*) 그룹별직원수
FROM emp
GROUP BY ROLLUP (deptno, job)



























